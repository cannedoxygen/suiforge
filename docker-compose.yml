version: '3.8'

services:
  # MongoDB for storing token data, user information, and analytics
  mongodb:
    image: mongo:latest
    container_name: suiforge-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-suiforge}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-suiforgepassword}
    networks:
      - suiforge-network

  # Redis for caching and message queue
  redis:
    image: redis:alpine
    container_name: suiforge-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - suiforge-network

  # Backend API server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: suiforge-backend
    restart: always
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3001
      - MONGO_URI=mongodb://${MONGO_USERNAME:-suiforge}:${MONGO_PASSWORD:-suiforgepassword}@mongodb:27017/suiforge?authSource=admin
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUI_RPC_URL=${SUI_RPC_URL}
      - DEPLOYER_PRIVATE_KEY=${DEPLOYER_PRIVATE_KEY}
      - TOKEN_FACTORY_ID=${TOKEN_FACTORY_ID}
      - DEEPBOOK_PACKAGE_ID=${DEEPBOOK_PACKAGE_ID}
      - JWT_SECRET=${JWT_SECRET:-suiforge_secret_key}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - suiforge-network

  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: suiforge-frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - REACT_APP_API_URL=http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - suiforge-network

  # Twitter listener service
  twitter-listener:
    build:
      context: ./backend
      dockerfile: Dockerfile.listener
    container_name: suiforge-twitter
    restart: always
    depends_on:
      - mongodb
      - redis
      - backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - LISTENER_TYPE=twitter
      - MONGO_URI=mongodb://${MONGO_USERNAME:-suiforge}:${MONGO_PASSWORD:-suiforgepassword}@mongodb:27017/suiforge?authSource=admin
      - REDIS_URL=redis://redis:6379
      - TWITTER_API_KEY=${TWITTER_API_KEY}
      - TWITTER_API_SECRET=${TWITTER_API_SECRET}
      - TWITTER_ACCESS_TOKEN=${TWITTER_ACCESS_TOKEN}
      - TWITTER_ACCESS_SECRET=${TWITTER_ACCESS_SECRET}
      - TWITTER_BOT_USERNAME=${TWITTER_BOT_USERNAME:-SuiForge_AI}
      - API_BASE_URL=http://backend:3001
      - API_KEY=${API_KEY}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - suiforge-network
    command: node src/ai/listeners/start-twitter.js

  # Farcaster listener service
  farcaster-listener:
    build:
      context: ./backend
      dockerfile: Dockerfile.listener
    container_name: suiforge-farcaster
    restart: always
    depends_on:
      - mongodb
      - redis
      - backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - LISTENER_TYPE=farcaster
      - MONGO_URI=mongodb://${MONGO_USERNAME:-suiforge}:${MONGO_PASSWORD:-suiforgepassword}@mongodb:27017/suiforge?authSource=admin
      - REDIS_URL=redis://redis:6379
      - FARCASTER_MNEMONIC=${FARCASTER_MNEMONIC}
      - FARCASTER_API_KEY=${FARCASTER_API_KEY}
      - API_BASE_URL=http://backend:3001
      - API_KEY=${API_KEY}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - suiforge-network
    command: node src/ai/listeners/start-farcaster.js

  # Telegram listener service
  telegram-listener:
    build:
      context: ./backend
      dockerfile: Dockerfile.listener
    container_name: suiforge-telegram
    restart: always
    depends_on:
      - mongodb
      - redis
      - backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - LISTENER_TYPE=telegram
      - MONGO_URI=mongodb://${MONGO_USERNAME:-suiforge}:${MONGO_PASSWORD:-suiforgepassword}@mongodb:27017/suiforge?authSource=admin
      - REDIS_URL=redis://redis:6379
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - API_BASE_URL=http://backend:3001
      - API_KEY=${API_KEY}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - suiforge-network
    command: node src/ai/listeners/start-telegram.js

  # Nginx for serving static files and routing
  nginx:
    image: nginx:alpine
    container_name: suiforge-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend/build:/usr/share/nginx/html
      - ./backend/public:/usr/share/nginx/public
    depends_on:
      - backend
      - frontend
    networks:
      - suiforge-network

networks:
  suiforge-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data: